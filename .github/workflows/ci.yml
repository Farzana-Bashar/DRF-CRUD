name: Pylint

on:
  push:
    branches: [ main ]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # - name: Set up Python 3.9
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: 3.9
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    #     pip install pylint
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Analysing the code with pylint
    #   run: |
    #     python -m pylint --fail-under=10 `find -regextype egrep -regex '(.*.py)$'` |
    #     tee pylint.txt
    # - name: Upload pylint.txt as artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: pylint report
    #     path: pylint.txt
    # - name: Build and Push Docker Image
    #   uses: mr-smithers-excellent/docker-build-push@v5
    #   with:
    #     image: farzanabashar/django-crud
    #     registry: docker.io
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-2

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      # env:
      #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #   ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
      #   IMAGE_TAG: ${{ github.run_number }}
      run: make publish_dev
